{"version":3,"sources":["images/icon-arrow.svg","images/icon-location.svg","images/pattern-bg.png","App.js","index.js"],"names":["App","useState","loading","arrowIcon","src","ArrowIcon","alt","mapMarker","L","Icon","iconUrl","LocationIcon","iconRetinaUrl","iconSize","Point","divider","width","height","margin","background","loadScreenStyle","position","top","display","alignItems","justifyContent","color","stateAbbreviation","className","style","backgroundImage","HeaderPattern","type","placeholder","role","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Marker","icon","Popup","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAAe,MAA0B,uCCA1B,MAA0B,0CCA1B,MAA0B,uC,OC4U1BA,MArUf,WAAgB,IAAD,EACgBC,oBAAS,GADzB,mBACNC,EADM,aAEcD,mBAAS,KAFvB,gCAGWA,mBAAS,KAHpB,gCAIeA,mBAAS,KAJxB,gCAKuBA,mBAAS,KALhC,gCAMmBA,mBAAS,KAN5B,gCAOSA,mBAAS,KAPlB,mBASPE,GATO,UASK,qBAAKC,IAAKC,EAAWC,IAAI,iBAErCC,EAAY,IAAIC,IAAEC,KAAK,CAC3BC,QAASC,EACTC,cAAeD,EACfE,SAAU,IAAIL,IAAEM,MAAM,GAAI,MAGtBC,EAAU,CACdC,MAAO,MACPC,OAAQ,OACRC,OAAQ,aACRC,WAAY,aAyBRC,EAAkBlB,EACpB,CACEe,OAAQ,QACRD,MAAO,QACPK,SAAU,WACVC,IAAK,IACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBN,WAAY,qBACZO,MAAO,SAET,CAAEH,QAAS,QAGXI,EAAoB,GAmMxB,OAhGIA,EAAoB,MAiGtB,gCACE,mCACE,sBACEC,UAAU,aACVC,MAAO,CAAEC,gBAAiB,OAASC,EAAgB,KAFrD,UAIE,oDACA,gCACE,uBACEC,KAAK,OACLC,YAAY,wCAEd,iCAAS9B,UAGb,sBAAKyB,UAAU,gBAAf,UACE,sBAAKA,UAAU,MAAf,UACE,2CACA,8CAEF,qBAAKC,MAAOd,IACZ,sBAAKa,UAAU,MAAf,UACE,yCACA,wCACSD,EADT,mBAKF,qBAAKE,MAAOd,IACZ,sBAAKa,UAAU,MAAf,UACE,yCACA,gDAEF,qBAAKC,MAAOd,IACZ,sBAAKa,UAAU,MAAf,UACE,oCACA,8CAIN,qBAAKA,UAAU,cAAcC,MAAOT,EAApC,SACGlB,EACC,qBAAK0B,UAAU,4BAA4BM,KAAK,SAAhD,SACE,sBAAMN,UAAU,kBAAhB,0BAGF,KAGJ,qBAAKA,UAAU,oBAAf,SACE,eAACO,EAAA,EAAD,CACEC,OAAQ,CAAC,SAAU,SACnBC,KAAM,GACNC,iBAAiB,EAHnB,UAKE,cAACC,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAEN,cAACC,EAAA,EAAD,CAAQC,KAAMpC,EAAWc,SAAU,CAAC,SAAU,SAA9C,SACE,cAACuB,EAAA,EAAD,8CC/TZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3ea571ee.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-arrow.2eaaa5ee.svg\";","export default __webpack_public_path__ + \"static/media/icon-location.7e6459d2.svg\";","export default __webpack_public_path__ + \"static/media/pattern-bg.a60a3c85.png\";","import React, { useState, useEffect } from \"react\";\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport ArrowIcon from \"./images/icon-arrow.svg\";\nimport LocationIcon from \"./images/icon-location.svg\";\nimport HeaderPattern from \"./images/pattern-bg.png\";\n\nfunction App() {\n  const [loading, isLoading] = useState(false);\n  const [ipAddress, setIp] = useState([]);\n  const [city, setCity] = useState([]);\n  const [region, setRegion] = useState([]);\n  const [postalCode, setPostalCode] = useState([]);\n  const [timezone, setTimezone] = useState([]);\n  const [isp, setIsp] = useState([]);\n\n  const arrowIcon = <img src={ArrowIcon} alt=\"Right Arrow\" />;\n\n  const mapMarker = new L.Icon({\n    iconUrl: LocationIcon,\n    iconRetinaUrl: LocationIcon,\n    iconSize: new L.Point(46, 55),\n  });\n\n  const divider = {\n    width: \"1px\",\n    height: \"60px\",\n    margin: \"10px 0 0 0\",\n    background: \"lightgrey\",\n  };\n\n  // useEffect(() => {\n  // const geolocationApi =\n  //\"https://geo.ipify.org/api/v1?apiKey=at_57DZTNOmuCZILCe4Zl6FnwxCWkP2K\";\n  //   fetch(geolocationApi)\n  //     .then((res) => res.json())\n  //     .then((data) => {\n  //       let userIpAddress = data.ip;\n  //       let userCity = data.location.city;\n  //       let userRegion = data.location.region;\n  //       let userPostalCode = data.location.postalCode;\n  //       let userTimezone = data.location.timezone;\n  //       let userIsp = data.isp;\n  //       setIp(userIpAddress);\n  //       setCity(userCity);\n  //       setRegion(userRegion);\n  //       setPostalCode(userPostalCode);\n  //       setTimezone(userTimezone);\n  //       setIsp(userIsp);\n  //       isLoading(false);\n  //     });\n  // }, []);\n\n  const loadScreenStyle = loading\n    ? {\n        height: \"100vh\",\n        width: \"100vw\",\n        position: \"absolute\",\n        top: \"0\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        background: \"rgba(0, 0, 0, 50%)\",\n        color: \"white\",\n      }\n    : { display: \"none\" };\n\n  let state = \"New York\";\n  let stateAbbreviation = \"\";\n  switch (state) {\n    case \"Alabama\":\n      stateAbbreviation = \"AL \";\n      break;\n    case \"Alaska\":\n      stateAbbreviation = \"AK \";\n      break;\n    case \"Arizona\":\n      stateAbbreviation = \"AZ \";\n      break;\n    case \"Arkansas\":\n      stateAbbreviation = \"AR \";\n      break;\n    case \"California\":\n      stateAbbreviation = \"CA \";\n      break;\n    case \"Colorado\":\n      stateAbbreviation = \"CO \";\n      break;\n    case \"Connecticut\":\n      stateAbbreviation = \"CT \";\n      break;\n    case \"Delaware\":\n      stateAbbreviation = \"DE \";\n      break;\n    case \"Florida\":\n      stateAbbreviation = \"FL \";\n      break;\n    case \"Georgia\":\n      stateAbbreviation = \"GA \";\n      break;\n    case \"Hawaii\":\n      stateAbbreviation = \"HI \";\n      break;\n    case \"Idaho\":\n      stateAbbreviation = \"ID \";\n      break;\n    case \"Illinois\":\n      stateAbbreviation = \"IL \";\n      break;\n    case \"\":\n      stateAbbreviation = \" \";\n      break;\n    case \"Indiana\":\n      stateAbbreviation = \"IN \";\n      break;\n    case \"Iowa\":\n      stateAbbreviation = \"IA \";\n      break;\n    case \"Kansas\":\n      stateAbbreviation = \"KS \";\n      break;\n    case \"Kentucky\":\n      stateAbbreviation = \"KY \";\n      break;\n    case \"Louisiana\":\n      stateAbbreviation = \"LA \";\n      break;\n    case \"Maine\":\n      stateAbbreviation = \"ME \";\n      break;\n    case \"Maryland\":\n      stateAbbreviation = \"MD \";\n      break;\n    case \"Massachusetts\":\n      stateAbbreviation = \"MA \";\n      break;\n    case \"Michigan\":\n      stateAbbreviation = \"MI \";\n      break;\n    case \"Minnesota\":\n      stateAbbreviation = \"MN \";\n      break;\n    case \"Mississippi\":\n      stateAbbreviation = \"MS \";\n      break;\n    case \"Missouri\":\n      stateAbbreviation = \"MO \";\n      break;\n    case \"Montana\":\n      stateAbbreviation = \"MT \";\n      break;\n    case \"Nebraska\":\n      stateAbbreviation = \"NE \";\n      break;\n    case \"Nevada\":\n      stateAbbreviation = \"NV \";\n      break;\n    case \"New Hampshire\":\n      stateAbbreviation = \"NH \";\n      break;\n    case \"New Jersey\":\n      stateAbbreviation = \"NJ \";\n      break;\n    case \"New Mexico\":\n      stateAbbreviation = \"NM \";\n      break;\n    case \"New York\":\n      stateAbbreviation = \"NY \";\n      break;\n    case \"North Carolina\":\n      stateAbbreviation = \"NC \";\n      break;\n    case \"North Dakota\":\n      stateAbbreviation = \"ND \";\n      break;\n    case \"Ohio\":\n      stateAbbreviation = \"OH \";\n      break;\n    case \"Oklahoma\":\n      stateAbbreviation = \"OK \";\n      break;\n    case \"Oregon\":\n      stateAbbreviation = \"OR \";\n      break;\n    case \"Pennsylvania\":\n      stateAbbreviation = \"PA \";\n      break;\n    case \"Rhode Island\":\n      stateAbbreviation = \"RI \";\n      break;\n    case \"South Carolina\":\n      stateAbbreviation = \"SC \";\n      break;\n    case \"South Dakota\":\n      stateAbbreviation = \"SD \";\n      break;\n    case \"Tennessee\":\n      stateAbbreviation = \"TN \";\n      break;\n    case \"Texas\":\n      stateAbbreviation = \"TX \";\n      break;\n    case \"Utah\":\n      stateAbbreviation = \"UT \";\n      break;\n    case \"Vermont\":\n      stateAbbreviation = \"VT \";\n      break;\n    case \"Virginia\":\n      stateAbbreviation = \"VA \";\n      break;\n    case \"Washington\":\n      stateAbbreviation = \"WA \";\n      break;\n    case \"West Virginia\":\n      stateAbbreviation = \"WV \";\n      break;\n    case \"Wisconsin\":\n      stateAbbreviation = \"WI \";\n      break;\n    case \"Wyoming\":\n      stateAbbreviation = \"WY \";\n      break;\n    case \"District of Columbia\":\n      stateAbbreviation = \"DC \";\n      break;\n    case \"Guam\":\n      stateAbbreviation = \"GU \";\n      break;\n    case \"Marshall Islands\":\n      stateAbbreviation = \"MH \";\n      break;\n    case \"Northern Mariana Island\":\n      stateAbbreviation = \"MP \";\n      break;\n    case \"Puerto Rico\":\n      stateAbbreviation = \"PR \";\n      break;\n    case \"Virgin Islands\":\n      stateAbbreviation = \"VI \";\n      break;\n    case \"Armed Forces Africa\":\n      stateAbbreviation = \"AE \";\n      break;\n    case \"Armed Forces Americas\":\n      stateAbbreviation = \"AA \";\n      break;\n    case \"Armed Forces Canada\":\n      stateAbbreviation = \"AE \";\n      break;\n    case \"Armed Forces Europe\":\n      stateAbbreviation = \"AE \";\n      break;\n    case \"Armed Forces Middle East\":\n      stateAbbreviation = \"AE \";\n      break;\n    case \"Armed Forces Pacific\":\n      stateAbbreviation = \"AP \";\n      break;\n    default:\n      stateAbbreviation = \"NY \";\n  }\n\n  return (\n    <div>\n      <header>\n        <div\n          className=\"header-top\"\n          style={{ backgroundImage: \"url(\" + HeaderPattern + \")\" }}\n        >\n          <h1>IP Address Tracker</h1>\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"Search for any IP address or domain\"\n            />\n            <button>{arrowIcon}</button>\n          </div>\n        </div>\n        <div className=\"header-bottom\">\n          <div className=\"col\">\n            <p>IP Address</p>\n            <h2>ipAddress</h2>\n          </div>\n          <div style={divider}></div>\n          <div className=\"col\">\n            <p>Location</p>\n            <h2>\n              city, {stateAbbreviation}\n              postalCode\n            </h2>\n          </div>\n          <div style={divider}></div>\n          <div className=\"col\">\n            <p>Timezone</p>\n            <h2>UTCtimezone</h2>\n          </div>\n          <div style={divider}></div>\n          <div className=\"col\">\n            <p>ISP</p>\n            <h2>isp</h2>\n          </div>\n        </div>\n      </header>\n      <div className=\"load-screen\" style={loadScreenStyle}>\n        {loading ? (\n          <div className=\"spinner-border text-light\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <div className=\"leaflet-container\">\n        <MapContainer\n          center={[42.8864, -78.8784]}\n          zoom={15}\n          scrollWheelZoom={true}\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <Marker icon={mapMarker} position={[42.8864, -78.8784]}>\n            <Popup>IP Address Location.</Popup>\n          </Marker>\n        </MapContainer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./styles/styles.css\";\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}