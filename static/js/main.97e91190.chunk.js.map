{"version":3,"sources":["images/icon-arrow.svg","images/icon-location.svg","images/pattern-bg.png","App.js","index.js"],"names":["App","useState","apiKey","setApiKey","loading","isLoading","ipAddress","setIp","city","setCity","region","setRegion","postalCode","setPostalCode","timezone","setTimezone","isp","setIsp","lat","setLat","lng","setLng","arrowIcon","src","ArrowIcon","alt","mapMarker","L","Icon","iconUrl","LocationIcon","iconRetinaUrl","iconSize","Point","divider","width","height","margin","background","loadScreenStyle","position","top","display","alignItems","justifyContent","color","useEffect","fetch","then","response","json","data","console","log","ip","location","res","catch","err","stateAbbreviation","inputRef","useRef","className","style","backgroundImage","HeaderPattern","ref","type","placeholder","onClick","e","ipInput","current","value","role","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Marker","icon","Popup","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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AK,gBACHA,GAAoB,QACpB,MACF,IAAK,aACHA,GAAoB,QACpB,MACF,IAAK,aACHA,GAAoB,QACpB,MACF,IAAK,WACHA,GAAoB,QACpB,MACF,IAAK,iBACHA,GAAoB,QACpB,MACF,IAAK,eACHA,GAAoB,QACpB,MACF,IAAK,OACHA,GAAoB,QACpB,MACF,IAAK,WACHA,GAAoB,QACpB,MACF,IAAK,SACHA,GAAoB,QACpB,MACF,IAAK,eACHA,GAAoB,QACpB,MACF,IAAK,eACHA,GAAoB,QACpB,MACF,IAAK,iBACHA,GAAoB,QACpB,MACF,IAAK,eACHA,GAAoB,QACpB,MACF,IAAK,YACHA,GAAoB,QACpB,MACF,IAAK,QACHA,GAAoB,QACpB,MACF,IAAK,OACHA,GAAoB,QACpB,MACF,IAAK,UACHA,GAAoB,QACpB,MACF,IAAK,WACHA,GAAoB,QACpB,MACF,IAAK,aACHA,GAAoB,QACpB,MACF,IAAK,gBACHA,GAAoB,QACpB,MACF,IAAK,YACHA,GAAoB,QACpB,MACF,IAAK,UACHA,GAAoB,QACpB,MACF,IAAK,uBACHA,GAAoB,QACpB,MACF,IAAK,OACHA,GAAoB,QACpB,MACF,IAAK,mBACHA,GAAoB,QACpB,MACF,IAAK,0BACHA,GAAoB,QACpB,MACF,IAAK,cACHA,GAAoB,QACpB,MACF,IAAK,iBACHA,GAAoB,QACpB,MACF,IAAK,sBACHA,GAAoB,QACpB,MACF,IAAK,wBACHA,GAAoB,QACpB,MACF,IAAK,sBAGL,IAAK,sBAGL,IAAK,2BACHA,GAAoB,QACpB,MACF,IAAK,uBACHA,GAAoB,QACpB,MACF,QACEA,GAAoB,GAGxB,IAAMC,GAAWC,mBAYjB,OACE,gCACE,mCACE,sBACEC,UAAU,aACVC,MAAO,CAAEC,gBAAiB,OAASC,EAAgB,KAFrD,UAIE,oDACA,gCACE,uBACEC,IAAKN,GACLO,KAAK,OACLC,YAAY,wCAEd,wBAAQC,QAzBlB,SAAqBC,GACnB,IAAMC,EAAUX,GAASY,QAAQC,MACjB,KAAZF,IACJpE,EACE,kFACEoE,GAEJlE,GAAU,GACVuD,GAASY,QAAQC,MAAQ,OAiBjB,SAA+BnD,UAGnC,sBAAKwC,UAAU,gBAAf,UACE,sBAAKA,UAAU,MAAf,UACE,2CACA,6BAAKxD,OAEP,qBAAKyD,MAAO7B,IACZ,sBAAK4B,UAAU,MAAf,UACE,yCACA,+BACGtD,EACAmD,GACA/C,QAGL,qBAAKmD,MAAO7B,IACZ,sBAAK4B,UAAU,MAAf,UACE,yCACA,qCAAQhD,QAEV,qBAAKiD,MAAO7B,IACZ,sBAAK4B,UAAU,MAAf,UACE,oCACA,6BAAK9C,aAIX,qBAAK8C,UAAU,cAAcC,MAAOxB,GAApC,SACGnC,EACC,qBAAK0D,UAAU,4BAA4BY,KAAK,SAAhD,SACE,sBAAMZ,UAAU,kBAAhB,0BAGF,KAGJ,qBAAKA,UAAU,oBAAf,SACE,eAACa,EAAA,EAAD,CAAcC,OAAQ,CAAC1D,EAAKE,GAAMyD,KAAM,GAAIC,iBAAiB,EAA7D,UACE,cAACC,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAEN,cAACC,EAAA,EAAD,CAAQC,KAAMzD,EAAWc,SAAU,CAACtB,EAAKE,GAAzC,SACE,cAACgE,EAAA,EAAD,8CCpWZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.97e91190.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-arrow.2eaaa5ee.svg\";","export default __webpack_public_path__ + \"static/media/icon-location.7e6459d2.svg\";","export default __webpack_public_path__ + \"static/media/pattern-bg.a60a3c85.png\";","import React, { useState, useEffect, useRef } from \"react\";\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport ArrowIcon from \"./images/icon-arrow.svg\";\nimport LocationIcon from \"./images/icon-location.svg\";\nimport HeaderPattern from \"./images/pattern-bg.png\";\n\nfunction App() {\n  const [apiKey, setApiKey] = useState([]);\n  const [loading, isLoading] = useState(true);\n  const [ipAddress, setIp] = useState([]);\n  const [city, setCity] = useState([]);\n  const [region, setRegion] = useState([]);\n  const [postalCode, setPostalCode] = useState([]);\n  const [timezone, setTimezone] = useState([]);\n  const [isp, setIsp] = useState([]);\n  const [lat, setLat] = useState(42.88);\n  const [lng, setLng] = useState(-78.87);\n\n  const arrowIcon = <img src={ArrowIcon} alt=\"Right Arrow\" />;\n\n  const mapMarker = new L.Icon({\n    iconUrl: LocationIcon,\n    iconRetinaUrl: LocationIcon,\n    iconSize: new L.Point(46, 55),\n  });\n\n  const divider = {\n    width: \"1px\",\n    height: \"60px\",\n    margin: \"10px 0 0 0\",\n    background: \"lightgrey\",\n  };\n\n  const loadScreenStyle = loading\n    ? {\n        height: \"100vh\",\n        width: \"100vw\",\n        position: \"absolute\",\n        top: \"0\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        background: \"rgba(0, 0, 0, 50%)\",\n        color: \"white\",\n      }\n    : { display: \"none\" };\n\n  useEffect(() => {\n    fetch(\n      \"https://geo.ipify.org/api/v1?apiKey=at_XoeODQ8fNzA8KFNhRUnmBtHDzUMs5\"\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        setIp(data.ip);\n        setCity(data.location.city);\n        setRegion(data.location.region);\n        setPostalCode(data.location.postalCode);\n        setTimezone(data.location.timezone);\n        setIsp(data.isp);\n        setLat(data.location.lat);\n        setLng(data.location.lng);\n        isLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    fetch(apiKey)\n      .then((res) => res.json())\n      .then((data) => {\n        setIp(data.ip);\n        setCity(data.location.city);\n        setRegion(data.location.region);\n        setPostalCode(data.location.postalCode);\n        setTimezone(data.location.timezone);\n        setIsp(data.isp);\n        setLat(data.location.lat);\n        setLng(data.location.lng);\n        isLoading(false);\n      })\n      .catch((err) => {\n        setIp(\"Not Available\");\n        setCity(\"Not Available\");\n        setRegion(\"\");\n        setPostalCode(\"\");\n        setTimezone(\"-Not Available\");\n        setIsp(\"Not Available\");\n        setLat(0);\n        setLng(0);\n        isLoading(false);\n      });\n  }, [apiKey]);\n\n  let stateAbbreviation = \"\";\n  switch (region) {\n    case \"Alabama\":\n      stateAbbreviation = \", AL \";\n      break;\n    case \"Alaska\":\n      stateAbbreviation = \", AK \";\n      break;\n    case \"Arizona\":\n      stateAbbreviation = \", AZ \";\n      break;\n    case \"Arkansas\":\n      stateAbbreviation = \", AR \";\n      break;\n    case \"California\":\n      stateAbbreviation = \", CA \";\n      break;\n    case \"Colorado\":\n      stateAbbreviation = \", CO \";\n      break;\n    case \"Connecticut\":\n      stateAbbreviation = \", CT \";\n      break;\n    case \"Delaware\":\n      stateAbbreviation = \", DE \";\n      break;\n    case \"Florida\":\n      stateAbbreviation = \", FL \";\n      break;\n    case \"Georgia\":\n      stateAbbreviation = \", GA \";\n      break;\n    case \"Hawaii\":\n      stateAbbreviation = \", HI \";\n      break;\n    case \"Idaho\":\n      stateAbbreviation = \", ID \";\n      break;\n    case \"Illinois\":\n      stateAbbreviation = \", IL \";\n      break;\n    case \"\":\n      stateAbbreviation = \",  \";\n      break;\n    case \"Indiana\":\n      stateAbbreviation = \", IN \";\n      break;\n    case \"Iowa\":\n      stateAbbreviation = \", IA \";\n      break;\n    case \"Kansas\":\n      stateAbbreviation = \", KS \";\n      break;\n    case \"Kentucky\":\n      stateAbbreviation = \", KY \";\n      break;\n    case \"Louisiana\":\n      stateAbbreviation = \", LA \";\n      break;\n    case \"Maine\":\n      stateAbbreviation = \", ME \";\n      break;\n    case \"Maryland\":\n      stateAbbreviation = \", MD \";\n      break;\n    case \"Massachusetts\":\n      stateAbbreviation = \", MA \";\n      break;\n    case \"Michigan\":\n      stateAbbreviation = \", MI \";\n      break;\n    case \"Minnesota\":\n      stateAbbreviation = \", MN \";\n      break;\n    case \"Mississippi\":\n      stateAbbreviation = \", MS \";\n      break;\n    case \"Missouri\":\n      stateAbbreviation = \", MO \";\n      break;\n    case \"Montana\":\n      stateAbbreviation = \", MT \";\n      break;\n    case \"Nebraska\":\n      stateAbbreviation = \", NE \";\n      break;\n    case \"Nevada\":\n      stateAbbreviation = \", NV \";\n      break;\n    case \"New Hampshire\":\n      stateAbbreviation = \", NH \";\n      break;\n    case \"New Jersey\":\n      stateAbbreviation = \", NJ \";\n      break;\n    case \"New Mexico\":\n      stateAbbreviation = \", NM \";\n      break;\n    case \"New York\":\n      stateAbbreviation = \", NY \";\n      break;\n    case \"North Carolina\":\n      stateAbbreviation = \", NC \";\n      break;\n    case \"North Dakota\":\n      stateAbbreviation = \", ND \";\n      break;\n    case \"Ohio\":\n      stateAbbreviation = \", OH \";\n      break;\n    case \"Oklahoma\":\n      stateAbbreviation = \", OK \";\n      break;\n    case \"Oregon\":\n      stateAbbreviation = \", OR \";\n      break;\n    case \"Pennsylvania\":\n      stateAbbreviation = \", PA \";\n      break;\n    case \"Rhode Island\":\n      stateAbbreviation = \", RI \";\n      break;\n    case \"South Carolina\":\n      stateAbbreviation = \", SC \";\n      break;\n    case \"South Dakota\":\n      stateAbbreviation = \", SD \";\n      break;\n    case \"Tennessee\":\n      stateAbbreviation = \", TN \";\n      break;\n    case \"Texas\":\n      stateAbbreviation = \", TX \";\n      break;\n    case \"Utah\":\n      stateAbbreviation = \", UT \";\n      break;\n    case \"Vermont\":\n      stateAbbreviation = \", VT \";\n      break;\n    case \"Virginia\":\n      stateAbbreviation = \", VA \";\n      break;\n    case \"Washington\":\n      stateAbbreviation = \", WA \";\n      break;\n    case \"West Virginia\":\n      stateAbbreviation = \", WV \";\n      break;\n    case \"Wisconsin\":\n      stateAbbreviation = \", WI \";\n      break;\n    case \"Wyoming\":\n      stateAbbreviation = \", WY \";\n      break;\n    case \"District of Columbia\":\n      stateAbbreviation = \", DC \";\n      break;\n    case \"Guam\":\n      stateAbbreviation = \", GU \";\n      break;\n    case \"Marshall Islands\":\n      stateAbbreviation = \", MH \";\n      break;\n    case \"Northern Mariana Island\":\n      stateAbbreviation = \", MP \";\n      break;\n    case \"Puerto Rico\":\n      stateAbbreviation = \", PR \";\n      break;\n    case \"Virgin Islands\":\n      stateAbbreviation = \", VI \";\n      break;\n    case \"Armed Forces Africa\":\n      stateAbbreviation = \", AE \";\n      break;\n    case \"Armed Forces Americas\":\n      stateAbbreviation = \", AA \";\n      break;\n    case \"Armed Forces Canada\":\n      stateAbbreviation = \", AE \";\n      break;\n    case \"Armed Forces Europe\":\n      stateAbbreviation = \", AE \";\n      break;\n    case \"Armed Forces Middle East\":\n      stateAbbreviation = \", AE \";\n      break;\n    case \"Armed Forces Pacific\":\n      stateAbbreviation = \", AP \";\n      break;\n    default:\n      stateAbbreviation = \"\";\n  }\n\n  const inputRef = useRef();\n  function handleClick(e) {\n    const ipInput = inputRef.current.value;\n    if (ipInput === \"\") return;\n    setApiKey(\n      \"https://geo.ipify.org/api/v1?apiKey=at_XoeODQ8fNzA8KFNhRUnmBtHDzUMs5&ipAddress=\" +\n        ipInput\n    );\n    isLoading(true);\n    inputRef.current.value = null;\n  }\n\n  return (\n    <div>\n      <header>\n        <div\n          className=\"header-top\"\n          style={{ backgroundImage: \"url(\" + HeaderPattern + \")\" }}\n        >\n          <h1>IP Address Tracker</h1>\n          <div>\n            <input\n              ref={inputRef}\n              type=\"text\"\n              placeholder=\"Search for any IP address or domain\"\n            />\n            <button onClick={handleClick}>{arrowIcon}</button>\n          </div>\n        </div>\n        <div className=\"header-bottom\">\n          <div className=\"col\">\n            <p>IP Address</p>\n            <h2>{ipAddress}</h2>\n          </div>\n          <div style={divider}></div>\n          <div className=\"col\">\n            <p>Location</p>\n            <h2>\n              {city}\n              {stateAbbreviation}\n              {postalCode}\n            </h2>\n          </div>\n          <div style={divider}></div>\n          <div className=\"col\">\n            <p>Timezone</p>\n            <h2>UTC{timezone}</h2>\n          </div>\n          <div style={divider}></div>\n          <div className=\"col\">\n            <p>ISP</p>\n            <h2>{isp}</h2>\n          </div>\n        </div>\n      </header>\n      <div className=\"load-screen\" style={loadScreenStyle}>\n        {loading ? (\n          <div className=\"spinner-border text-light\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <div className=\"leaflet-container\">\n        <MapContainer center={[lat, lng]} zoom={10} scrollWheelZoom={true}>\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <Marker icon={mapMarker} position={[lat, lng]}>\n            <Popup>IP Address Location.</Popup>\n          </Marker>\n        </MapContainer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./styles/styles.css\";\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}